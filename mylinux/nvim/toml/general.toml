[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
	let g:EasyMotion_leader_key = 'm'
'''

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'altercation/vim-colors-solarized'


# Filer
[[plugins]]
#repo = 'scrooloose/nerdtree'
repo = 'Shougo/defx.nvim'
depends = ["defx-git"]
hook_add = '''
source /home/takyafumin/dotfiles/vim/config/defx.vim
'''

[[plugins]]
repo ='kristijanhusak/defx-git'
hook_add = '''
source /home/takyafumin/dotfiles/vim/config/defx-git.vim
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
hook_add = '''
	let g:fzf_preview_window = 'right:60%'
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
	let g:gitgutter_override_sign_column_highlight = 0
'''

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#show_buffers = 1
	let g:airline#extensions#tabline#fnamemod = ':t'
	let g:airline_powerline_fonts = 1
	let g:airline_theme = 'denite.nvim'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
	let g:user_emmet_leader_key = '<c-t>'
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft  = ['markdown']
hook_add = '''
	let g:vim_markdown_folding_disabled=1
	let g:previm_enable_realtime = 1
'''

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'terryma/vim-expand-region'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'

[[plugins]]
repo = 'dense-analysis/ale'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
	let g:lsp_signs_enabled = 1
	let g:lsp_diagnostics_enabled = 1
	let g:lsp_diagnostics_echo_cursor = 1
	let g:lsp_virtual_text_enabled = 1
	let g:lsp_signs_error = {'text': '✗'}
	let g:lsp_signs_warning = {'text': '‼'}
	let g:lsp_signs_information = {'text': 'i'}
	let g:lsp_signs_hint = {'text': '?'}

	if (executable('pyls'))
		let s:pyls_config = {'pyls': {'plugins': {
			\	'pycodestyle': {'enabled': v:true},
			\	'pydocstyle': {'enabled': v:true},
			\	'pylint': {'enabled': v:true},
			\	'flake8': {'enabled': v:true},
			\	'jedi_definition': {
			\		'follow_imports': v:true,
			\		'follow_builtin_imports': v:true,
			\	},
			\}}}

		" pylsの起動定義
		augroup LspPython
			autocmd!
			autocmd User lsp_setup call lsp#register_server({
				\ 'name': 'pyls',
				\ 'cmd': { server_info -> ['pyls'] },
				\ 'whitelist': ['python'],
				\ 'workspace_config': s:pyls_config
				\})
		augroup END

	endif
	let g:lsp_async_completion = 1
	let g:python3complete_completions = 1
	set omnifunc=lsp#complete

	augroup LspAutoFormatting
		autocmd!
		autocmd BufWritePre *.py LspDocumentFormatSync
	augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'pixelneo/vim-python-docstring'
hook_add = '''
	nnoremap <silent> <C-l> :Docstring<CR>
'''

